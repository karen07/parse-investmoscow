const puppeteer = require('puppeteer');
const fs = require('node:fs');
const lodash = require("lodash");

function sleep(ms) {
    return new Promise((resolve) => {
        setTimeout(resolve, ms);
    });
}

async function asyncCall(thread) {
    let url_stock = 'https://www.cian.ru/cat.php?center=55.70950837313856%2C37.57643429999989&deal_type=sale&engine_version=2&flat_share=2&in_polygon[0]=37.84172564285271_55.78000432402266%2C37.8381207618713_55.775874525970494%2C37.84243326983639_55.77446586811748%2C37.84262672750849_55.771974101091104%2C37.8416827275085_55.749277102484484%2C37.84157576190186_55.74794544108413%2C37.83897929098507_55.74525257875241%2C37.83739676451868_55.74404373042019%2C37.838732481460525_55.74298009816793%2C37.841183997352545_55.743060321833575%2C37.83897964285276_55.722727886185154%2C37.83862557539366_55.72034817326636%2C37.83559735744853_55.71944437307499%2C37.835370708803126_55.71831419154461%2C37.83823396494291_55.71691750159089%2C37.838056931213345_55.71547311301385%2C37.836812846557606_55.71221445615604%2C37.83522525396725_55.709331054395555%2C37.83269301586908_55.70953687463627%2C37.829667367706236_55.70903403789297%2C37.83311126588435_55.70552351822608%2C37.827697554878185_55.68951421135665%2C37.82447346292115_55.68965045405069%2C37.83136543914793_55.68322046195302%2C37.833554015869154_55.67814012759211%2C37.837480388885474_55.6672498719639%2C37.838960677246064_55.66316274139358%2C37.83670784390257_55.65794084879904%2C37.835656529083245_55.65694309303843%2C37.83760389616388_55.65487847246661%2C37.83687972750851_55.65356745541324%2C37.80100123544311_55.62873670012244%2C37.79598013491824_55.62554336109055%2C37.78634567724606_55.62033499605651%2C37.78334147619623_55.618768681480326%2C37.77746201055901_55.619855533402706%2C37.77527329626457_55.61909966711279%2C37.778212973541216_55.617257701952106%2C37.77784818518065_55.61574504433011%2C37.760191219573976_55.60599579539028%2C37.75338926983641_55.60227892751446%2C37.7299954450912_55.59350760316188%2C37.7268679946899_55.59469840523759%2C37.72626726983634_55.59229549697373%2C37.7262673598022_55.59081598950582%2C37.69204305026244_55.57778089778455%2C37.68544477378839_55.57815154690915%2C37.678803592590306_55.57328235936491%2C37.6743402539673_55.57255251445782%2C37.59501783265684_55.57746616444403%2C37.593090671936025_55.57671634534502%2C37.51200186508174_55.59635625174229%2C37.506808949737554_55.59907823904434%2C37.46273446298218_55.6368075123157%2C37.46350692265317_55.64068225239439%2C37.46050283203121_55.640794546982576%2C37.457627470916734_55.64118904154646%2C37.44239252645875_55.65397824729769%2C37.434587576721185_55.66053543155961%2C37.43582144975277_55.661693766520735%2C37.43576786245721_55.662755031737014%2C37.430982915344174_55.664610641628116%2C37.414632153442334_55.68903015131686%2C37.413344899475064_55.690896881757396%2C37.38952706878662_55.70942491932811%2C37.387778313491815_55.71149057784176%2C37.39049275399779_55.71419814298992%2C37.385557272491454_55.7155489617061%2C37.37014935714723_55.746115620904355%2C37.36944173016362_55.750883999993725%2C37.36975304365541_55.76335905525834%2C37.37244070571134_55.76432079697595%2C37.3724259757175_55.76636979670426%2C37.369922155757884_55.76735417953104%2C37.370214730163575_55.782312184391266%2C37.370493611114505_55.78436801120489%2C37.38594269577028_55.80322699999366%2C37.38711208598329_55.804919036911976%2C37.394685720901464_55.82792275755836%2C37.39557615344238_55.830447148154136%2C37.39844478226658_55.83167107969975%2C37.40019761214057_55.83151823557964%2C37.400398790382326_55.83264967594742%2C37.39659544313046_55.83322180909622%2C37.392680272491454_55.84502158126453%2C37.39241188227847_55.84659117913199%2C37.39873052645878_55.859893456073635%2C37.40272161111449_55.86441833633205%2C37.43385747619623_55.87790681284802%2C37.441303050262405_55.88027084462084%2C37.470014457672086_55.88361266759345%2C37.47751410450743_55.88546991372396%2C37.48165826025772_55.882563306475106%2C37.48316434442331_55.8815803226785%2C37.483092277908824_55.88495581062434%2C37.4855716508179_55.8875561994203%2C37.50018383334346_55.89339220941865%2C37.52421672750851_55.903869074155224%2C37.55796999999999_55.90901557907218%2C37.572711542327866_55.91059395704873%2C37.62348079629517_55.90041967242986%2C37.635797880950896_55.898141151686396%2C37.66874564418033_55.89505457604897%2C37.67375601586915_55.89254677027454%2C37.67744661901856_55.8947775867987%2C37.705962965606716_55.891763491662616%2C37.711885134918205_55.889110234998974%2C37.827835219574_55.82962968399116%2C37.83341438888553_55.82575289922351%2C37.83652584655761_55.82188784027888%2C37.83809213491821_55.81612575504693%2C37.83605359521481_55.81460347077685%2C37.83632178569025_55.81276696067908%2C37.838623105812026_55.811486181656385%2C37.84172564285271_55.78000432402266&is_first_floor=0&min_house_year=1980&minlift=1&mintarea=34&object_type[0]=1&offer_type=flat&only_flat=1&polygon_name[0]=%D0%9E%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D1%8C%20%D0%BF%D0%BE%D0%B8%D1%81%D0%BA%D0%B0&room1=1&room2=1&wp=1&zoom=10&origin=map';

    const browser = await puppeteer.launch({
        headless: false,
    });

    const page = await browser.newPage();

    await page.setRequestInterception(true);

    await page.setViewport({
        width: 1920,
        height: 1080
    });

    page.on('request', (req) => {
        if (req.resourceType() === 'image') {
            req.abort();
        } else {
            req.continue();
        }
    });

    await page.goto(url_stock, {
        waitUntil: 'load',
        timeout: 5000
    }).then(() => {
        open_page_success = 1
    }).catch((res) => { })

    let more_flag = 1;
    let price_sum = 0;

    while (more_flag) {
        let current_height = 0;
        let previousHeight = 0;

        await sleep(6000);

        while (true) {
            await page.evaluate((current_height) => {
                window.scrollTo(0, current_height)
            }, current_height);
            await sleep(200);
            current_height = current_height + 500;
            const newHeight = await page.evaluate(() => document.body.scrollHeight);
            if (newHeight === previousHeight) {
                if (current_height > newHeight + 1000) {
                    current_height = newHeight;
                    break;
                }
            }
            previousHeight = newHeight;
        }

        const all_span = await page.$$('span');
        let next_span;
        for (const k of all_span) {
            const elementText = await page.evaluate(k => k.innerText, k);
            if (elementText.toLowerCase() === "дальше") {
                current_height = current_height - 2000;
                await page.evaluate((current_height) => {
                    window.scrollTo(0, current_height)
                }, current_height);
                await sleep(1000);
                next_span = k;
                more_flag = 1;
                break;
            }

            const MainPrice = await page.evaluate(k => k.dataset.mark, k);
            if (MainPrice == "MainPrice") {
                const Price = await page.evaluate(k => k.innerText, k);
                let matches = Price.replace(/[^0-9]/g, "");
                price_sum += parseInt(matches);
            }

            more_flag = 0;
        }

        if (more_flag) {
            next_span.click();
        }

        console.log(price_sum);
    }

    await browser.close();
}

asyncCall(0);
